/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2017, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/
/* Styles for the Inspector pane */

.l-inspect,
.l-inspect table tr td {
    font-size: 0.75rem;
}

.l-inspect {
    @extend .abs;
    background: $colorInspectorBg;
    color: $colorInspectorFg;
    line-height: 140%;

    .flex-elem.holder:not(:last-child) {
        margin-bottom: $interiorMargin;
    }

    .pane-header {
        color: pushBack($colorInspectorFg, 20%);
        font-size: 0.8rem;
    }

    .split-layout {
        .split-pane-component.pane {
            &.bottom {
                height: 30%;
                min-height: 20%;
                max-height: 80%;
            }
        }
    }
    .l-inspector-part {
        box-sizing: border-box;
        padding-right: $interiorMargin;

        .tree .form {
            margin-left: $treeVCW + $interiorMarginLg;
        }
        .section-header {
            background: none;
            color: $colorInspectorPropName;
            border-radius: unset;
            font-size: inherit;
            padding: $interiorMarginSm 0;
        }

        mct-form:not(:last-child) .form {
            border-bottom: 1px solid $colorInspectorSectionHeaderBg;
        }

        .form {
            margin-bottom: $interiorMarginSm;
            padding-bottom: $interiorMarginLg;
            .l-section-body {
                margin-bottom: 0;
                &:not(.first) {
                    border-top: 1px solid $colorFormLines;
                }
            }
            .form-row {
                // To be replaced with .inspector-config, see below.
                @include align-items(center);
                border: none !important;
                margin-bottom: 0 !important;
                padding: $interiorMarginSm 0;
                .label {
                    min-width: 80px;
                }
                input[type='text'],
                input[type='search'] {
                    width: 100%;
                }
            }
        }
    }

    ul li,
    em.t-inspector-part-header {
        display: block;
        position: relative;
    }

    em.t-inspector-part-header {
        border-radius: $basicCr;
        background-color: $colorInspectorSectionHeaderBg;
        color: $colorInspectorSectionHeaderFg;
        margin-top: $interiorMarginLg;
        //margin-bottom: $interiorMargin;
        padding: floor($formTBPad * .75) $formLRPad;
        text-transform: uppercase;
    }

    .inspector-properties {
        &:not(.first) {
            border-top: 1px solid $colorInspectorSectionHeaderBg;
        }
        padding: $interiorMarginSm 0;
        .label {
            color: $colorInspectorPropName;
            text-transform: uppercase;
        }
        .value {
            color: $colorInspectorPropVal;
            word-break: break-all;
        }
    }

    .inspector-location {
        .location-item {
            $h: 1.2em;
            box-sizing: border-box;
            cursor: pointer;
            display: inline-block;
            line-height: $h;
            position: relative;
            padding: 2px 4px;
            .t-object-label {
                .t-item-icon {
                    height: $h;
                    width: 0.7rem;
                }
            }
            &:hover {
                background: $colorItemTreeHoverBg;
                color: $colorItemTreeHoverFg;
                .icon {
                    color: $colorItemTreeIconHover;
                }
            }
        }
        &:not(.last) .t-object-label .t-title-label:after {
            color: pushBack($colorInspectorFg, 15%);
            content: '\e904';
            display: inline-block;
            font-family: symbolsfont;
            font-size: 8px;
            font-style: normal !important;
            line-height: inherit;
            margin-left: $interiorMarginSm;
            width: 4px;
        }
    }
    .holder-elements {
        .current-elements {
            position: relative;
            .tree-item {
                .t-object-label {
                    // Elements pool is a flat list, so don't indent items.
                    font-size: 0.75rem;
                    left: 0;
                }
            }
        }
    }
}

.l-inspect {
    .splitter-inspect-panel,
    .split-pane-component.pane.bottom {
        @include trans-prop-nice(opacity, 250ms); // Not working as desired currently; entire inspector seems to be destroyed and recreated when switching into and out of edit mode.
        opacity: 0;
        pointer-events: none;
    }
}

mct-representation:not(.s-status-editing) .l-inspect {
    .split-pane-component.pane.top {
        bottom: 0 !important;
    }
}

.s-status-editing .l-inspect {
    .location-item {
        pointer-events: none;
    }
    .splitter-inspect-panel,
    .split-pane-component.pane.bottom {
        opacity: 1;
        pointer-events: inherit;
    }
}

// NEW COMPACT FORM, FOR USE IN INSPECTOR
// ul > li > label, control
// Make a new UL for each form section
// Allow control-first, controls-below

.l-inspect .tree ul li,
.inspector-config ul li {
    padding: 2px 0;
}


.inspector-config {
    $labelW: 40%;
    $minW: $labelW;
    ul {
        margin-bottom: $interiorMarginLg;
        li {
            @include display(flex);
            @include flex-wrap(wrap);
            @include align-items(center);
            label,
            .control {
                @include display(flex);
                min-width: $minW;
            }
            label {
                line-height: inherit;
                padding: $interiorMarginSm 0;
                width: $labelW;
            }
            .control {
                @include flex-grow(1);
            }

            &:not(.section-header) {
                &:not(.connects-to-previous) {
                    //border-top: 1px solid $colorFormLines;
                }
            }

            &.connects-to-previous {
                padding-top: 0 !important;
            }

            &.section-header {
                margin-top: $interiorMarginLg;
                border-top: 1px solid $colorFormLines;
            }

            &.controls-first {
                .control {
                    @include flex-grow(0);
                    margin-right: $interiorMargin;
                    min-width: 0;
                    order: 1;
                    width: auto;
                }
                label {
                    @include flex-grow(1);
                    order: 2;
                    width: auto;
                }
            }
            &.controls-under {
                display: block;
                .control, label {
                    display: block;
                    width: auto;
                }

                ul li {
                    border-top: none !important;
                    padding: 0;
                }
            }
        }
    }

    .form-error {
        // Block element that visually flags an error and contains a message
        background-color: $colorFormFieldErrorBg;
        color: $colorFormFieldErrorFg;
        border-radius: $basicCr;
        display: block;
        padding: 1px 6px;
        &:before {
            content: $glyph-icon-alert-triangle;
            display: inline;
            font-family: symbolsfont;
            margin-right: $interiorMarginSm;
        }
    }
}

.tree .inspector-config {
    margin-left: $treeVCW + $interiorMarginLg;
}

